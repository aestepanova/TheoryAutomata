Вариант 40.

Разработать распознаватель на базе конечного автомата, который проверяет корректность вводимых строк,
удовлетворяющих следующему шаблону. Cтроки вводятся с клавиатуры или из файла. Для каждой сроки вывести на экран
либо сохранить в файл результат  проверки ее корректности:

    Шаблон:

        имя_команды список_ключей-модификаторов

        имя_команды - строка литералов {[a-zA-Z0-9],’.‘,’/’};

        список_ключей-модификаторов - последовательность множеств_ключей, разделенных пробелами.

        множество_ключей - поле вида ‘-<последовательность_односимвольных_ключей>’

        односимвольный_ключ – литерал [a-zA-Z0-9].

Распознаватель должен быть чувствителен к регистру. Значение ключа не зависит от того, к какому множеству он принадлежит.

Собрать и вывести для корректных команд статистику использования ключей: имя_команды – список всех ключей, примененных к ней.
Результат вывести после обработки всех строк на экран или в файл.


Вопросы:
1) Как выглядит команда? Как мы в курсе ассемблера вызывали файл на выполнение с параметрами ./file -d -s
Точка и слэш обязательно используются?
Точка и слэш именно в таком порядке ./ или они могут быть
./command -3 -r -q
../../dir/com13w.py -w -q
man